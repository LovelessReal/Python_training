#Тип данных список (list)
my_list = [1, 2, 5, 8, 10, 'text', False, 2.56 ]
print (my_list[1]) #Запрашиваем элемент из листа по индексу. Счет индекса начинается с 0. Т.е. сейчас я запрашиваю первый элемент листа
print (my_list[3]) #Запрашиваю четвертый элемент
my_list[5] = 42 #Перезаписываем пятый элемент нашего list

my_list.append('Hello world') #Функция добавления нового элемента в конец списка
print(my_list) #При запуске кода видим обновленный list

for thing in my_list: #Показываем, что дальнейшая команда должна совершиться над каждым элементом (на месте этого слова может быть любое обозначение, даже буквенное) списка
    print (thing)

numbers = [1, 2, 3, 4, 5, 6, 7]
for x in numbers:
    if x > 3:
        print (x * 2)
    elif x == 3:  #Иначе если
            print (x + 1)
    else:
         print(x) #В результате все элементы списка изменились в соответствии с теми условиями, что я им задала
#ВАЖНО! Последовательность элементов списка так и не изменилась

#Тип данных кортеж - tuple

my_tuple = (1, 2, 5, 'test', False) #Тоже поддерживает работу со всеми типами данных
print (my_tuple[4])
for element in my_tuple:
     print (element)
#В кортеже, в отличие от списка, нельзя менять элементы

my_tuple = [1, 2, "test"] #Переписываем старый touple. Прежняя версия удаляется

#Тип множество. Set

my_set = {1, 2, 3, 'test', False} #Из множества нельзя получить элемент по его индексу. Нельзя элемент изменить.

for element in my_set: #Данная функция сработает, так как никак не изменяет порядок элементов при запуске
     print(element)

my_second_set = {1, 1, 2, 1, 2, False, False}
